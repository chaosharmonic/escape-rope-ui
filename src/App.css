#root {
  margin: 0 auto;
  min-height: inherit;
  /* padding: 2rem; */
  text-align: center;
}

@keyframes fadeIn { from { opacity: 50%; }}
@keyframes fadeInStagger {
  from { opacity: 0%; }
  25% { opacity: 0%; }
  50% { opacity: 25%; }
}
@keyframes fadeOut { to { opacity: 50%; }}
@keyframes fadeOutFull { to { opacity: 0%; }}

@keyframes slideUp { from {
  translate: 0px 25px;
  transform: scale(90%);
}}
@keyframes slideDown { to {
  translate: 0px 25px;
  transform: scale(90%);
}}

@keyframes swipeRight { to {
  translate: 45vw 25px;
  rotate: 10deg;
  transform: scale(90%);
}}
@keyframes swipeLeft { to {
  translate: -45vw 25px;
  rotate: -10deg;
  transform: scale(90%);
}}

@keyframes unfoldDetails { from {
  opacity: 0;
}}
/*
*/

@keyframes unfold { from { transform: scaleY( 40% ); }}
@keyframes fold { to { transform: scaleY( 25% ); }}

main {
  max-width: 1280px;
  min-height: inherit;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

nav {
  display: inherit;
  /* position: sticky; */
  align-items: center;
  justify-content: space-evenly;
  margin-bottom: 0;
  background: black;
  height: max(10vh, 90px);
  width: 100%;
  border-radius: 10px 10px 0 0;

  transition: all 0.6s;

  /* TODO: fix this animation */
  /* I *think* this would involve a stacking grid */
  /* &.open{
    height: 100vh;
    transform: translateY(calc(-100vh + (max(10vh, 90px))));
    flex-direction: column;
  } */
}

section {
  /* max-width: inherit; */
  width: max(95vw, 300px);
  height: max(85vh, 300px);
  place-self: center;
  padding: 0 2vw;

  transition: all 0.5s;

  & > details {
    background: linear-gradient(45deg, rgba(60,0,205,0.45), rgba(60,0,205,0.7)), black;
    border-bottom: 2px solid black;

    &:not([open]) {
      
      &:hover{
        background: linear-gradient(45deg, rgba(60,0,205,0.6), rgba(60,0,205,0.85)), black;
      }


      & > div:first-of-type {
        opacity: 0;
      }
    }
    
    &[open] > div {
      transition: opacity 0.7s linear;
      opacity: initial;
    }

    /* TODO: clean this up further */
    & > div:first-of-type {
      padding-top: 2vh;
      display: flex;
      flex-direction: column;
      margin: 0 auto;
      gap: 2vh;
      max-width: 600px;
    }
  }

  &.cards {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    gap: 2vh;
    place-items: center;
  }

  &.matches, &.settings {
    overflow-y: auto;
  }
  
  &.upload {
    display: flex;
    /* flex-direction: column; */
    place-items: center;
  }
}

/* TODO: figure out which parts of this to tweak */
/* , .settings  { */
.upload form, .settings {
  display: inherit;
  flex-direction: column;

  /* width: clamp(300px, 50%, 600px); */
  align-content: space-between;
  /* gap: 5vh; */
}

.settings {
  align-items: center;
  
  & ul {
    padding: 0 1vw;
    padding-inline-start: 0;
  }
  
  & fieldset:not(:has(h3)) ul {
    padding-inline-start: 20px;
    & li { margin-bottom: 1vh; }
  }
  
  & fieldset:has(h3) ul {
    display: flex;
    gap: 0.75vw;
    margin-bottom: 0.5vh;
    flex-wrap: wrap;
    justify-content: center;
  }
  
  & li {
    width: fit-content;
    list-style-type: none;
  }

  & details {    
    &:first-of-type {
      margin-top: 10vh;
    }

    & menu:last-child {
      margin-bottom: 0;
    }
    
    & form {
      display: flex;
      flex-direction: column;
      gap: 1vh;
      width: clamp(300px, 75%, 800px);
      justify-self: center;
      
      & label {
        display: inherit;
        flex-direction: inherit;
        gap: 0.5vh;

        & p:first-of-type {
          margin-top: 1vh;
        }

        & p:not(:first-of-type){
            font-size: 0.9rem;
          }
        }
      }

    }
    & menu {
      width: clamp(200px, 50%, 400px);
      place-self: center;
    }
  }

/* TODO: decide later if I want to keep this structure here */
.upload form {
  height: clamp(250px, 60%, 350px);
  width: clamp(250px, 80%, 350px);

  margin: 0 auto;
  padding: 10%;
  font-size: 1rem;
  gap: 10vh;
  /* background:linear-gradient(75deg, rgba(75, 0, 150, 0.35), rgba(75, 0, 150, 0.7)),
  black; */
  background: linear-gradient(75deg, rgba(0, 0, 0, 0.35), rgba(0, 0, 0, 0.7)),
  rgb(75, 0, 150);
  border-radius: 5%;
  box-shadow: 2px 3px 7px black;
  align-items: center;
  
  
  & div {
    display: inherit;
    flex-direction: inherit;
    width: 100%;
    gap: 3.5vh;
    align-items: center;
    &:last-of-type {
      height: 10vh;
      flex-direction: column-reverse;
    }
  }
  
  & label {
    min-height: 140px;
    & p {
      margin: 5px auto;
    }
  }

  & input {
    font-size: inherit;
    /* TODO: style buttons */
    width: 80%;

    &[type="submit"] {
      padding: 5px 0;
      width: 50%;
    }
  }
}

details {
  place-self: center;
  width: 90%;
  margin-bottom: 1vh;
  border-radius: 10px;

  & summary {
    list-style-position: outside;
    place-self: center;
    width: min(80%, 450px);
  }

  & h3 {
    margin: 0 auto;
    width: fit-content;
  }
  
  &[name="tabs"], &:is(section > *) {
    &[open] {
      padding: 2vh 3vw;
      
      & > summary {
        /* TODO: list style something something */
        list-style-type:  none;
      }
    }
  
    & > summary {
      padding: 2vh 0;
    }
  
    & fieldset {
      width: clamp(250px, 85%, 800px);
      margin: 2vh auto;
      padding: 2vh 1.5vw;
      border-radius: 5px;
      border: 2px solid rgb(80,0,225);
       /* linear-gradient(60deg, rgba(60,0,205,0.75), rgba(60,0,205,0.45)); */
      box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.35), -2px -3px 10px rgba(0, 0, 0, 0.3);
      
      display: inherit;
      flex-direction: column;
      justify-content: space-evenly;
      /* gap: 2vw; */
      gap: 1vh;
      
      & > label {
        /* margin: 0 auto; */
        &:has(input[type="number"]){
          margin: 1vh 25%;
          justify-content: space-between;
        }
      }
    }
    
    & label {
      margin: 0;
      display: flex;
      gap: 1vw;
    }
    
    & input {
      margin: 0;
      place-self: center;
    }
    
    & p {
      margin: 2px auto;
    }
    
    & > div {
      display: flex;
      gap: 2vw;
      justify-content: space-evenly;
    }
  }
}

/* .sources {
  padding-bottom: 2vh;
} */

li, .coverLetter {
  text-align: left;
}

/* FIX:
  for some reason I can't get this to nest
  more than 2 layers deep?
*/
.swiping {
  &.right { animation: swipeRight 0.6s, fadeOutFull 0.5s }
  &.left { animation: swipeLeft 0.6s, fadeOutFull 0.5s }
}

.card {
  container-type: inline-size;
  container-name: card;

  /*
  &:nth-of-type(2){
    transform: translateY(25px);
  }

  grid-area: 1/1;
  */

  &.vanish{
    /* opacity: 0; */
    animation: fadeOutFull 0.6s, slideDown 0.6s;
  }

  transition: all 0.6s;
  
  padding: 2em;
  /* TODO: transitions here */
  border-radius: 5%;
  /* background: rgba(0, 0, 0, 0.9); */
  background: linear-gradient(75deg, rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.7)),
  rgb(75, 0, 150);
  box-shadow: 2px 4px 10px black;

  width: min(90%, 550px);
  height: min(90%, 550px);
  /* width: 90%;
  height: 90%; */

  display: flex;
  flex-direction: column;
  place-content: space-between;

  &.empty { 
    display: grid;
    place-content: center;
    animation: none;
  }
}

menu {
  padding-inline-start: 0;
  
  & li {
    list-style: none;
  }
}

div.buttons {
  margin-bottom: 5%;
}

div.buttons, menu {
  display: flex;
  justify-content: space-evenly;

  &:is(dialog *) {
    max-width: 75%;
    margin: 1vh auto;
    flex-wrap: wrap;

    & button {
      min-width: 150px;
    }
  }
}

dialog {
  text-shadow: none;
  border: 3px solid rgb(100, 108, 255);
  color: rgb(215,215,215);

  height: 95svh;
  width: 95vw;

  /* highighted: text shadow: none */
  &[open] {
    animation: unfold 0.3s;
    & > * {
      animation: fadeInStagger ease-in 0.5s;
    }
    
    &::backdrop{
      background-color: rgba(0, 0, 0, 0.6);
      animation: fadeIn 0.3s;
    }
  }

  transition: all 0.3s ease-out allow-discrete;
  animation: fold 0.3s;

  & > form {
    display: flex;
    flex-direction: row-reverse;
  }

  & > div {
    max-width: 80%;
    margin: 0 auto;

    & ul {
      text-align: left;
    }
  }

  & details {
    &:first-of-type {
      margin-top: 3vh;
      margin-bottom: 1.5vh;
    }
      
    &[name="tabs"] {
      padding: 0 1vw;
  
      background: linear-gradient(135deg,
      transparent,
      rgba(85, 0, 235, 0.3));

      &:hover:not([open]) {
        background: linear-gradient(135deg,
          transparent,
        rgba(85, 0, 235, 0.35),
        rgba(85, 0, 235, 0.55));
      }
        
      border-top: 2px solid rgba(70,0,205,0.85);
      border-bottom: 2px solid rgba(70,0,205,0.85);
        
      &[open] {
        border-top: 2px solid rgba(80,0,195,0.85);
        border-bottom: 2px solid rgba(80,0,195,0.85);
        
        background:
        /* rgba(35, 35, 35, 0.05), */
          linear-gradient(110deg,
          rgba(0, 0, 0, 0.45),
          rgba(0, 0, 0, 0.35)),
          rgb(80, 0, 190);
  
  
        /* TODO: revisit this */
  
        text-shadow: 2px 3px 5px rgba(0, 0, 0, 0.45),
          /* 2px 3px 3px rgba(85, 85, 85, 0.15), */
          3px 5px 10px rgba(0, 0, 0, 0.65),
          /* -3px 4px 5px rgba(85, 85, 85, 0.25), */
          -5px -3px 15px rgba(0, 0, 0, 0.85);
          /* -7px -7px 20px rgba(0, 0, 0, 0.85); */
      }

      & p {
        padding-bottom: 0.5rem;
      }

      & li {
        padding-bottom: 1.1rem;
      }

      & form {
        display: flex;
        flex-direction: column;
        gap: 2vh;
      
        & menu {
          width: clamp(200px, 50%, 400px);
        }
      }
    }
  }
}

.matches ul {
  display: flex;
  flex-direction: column;
  gap: 2vh;
  margin-block-start: 0;
  padding-inline-start: 0;

  & li {
    list-style: none;
    min-height: 10vh;
    text-align: left;
    padding: 3%;
    background: linear-gradient(75deg, rgba(0, 0, 0, 0.35), rgba(0, 0, 0, 0.7)),
    rgb(75, 0, 150);
    /*
    background: linear-gradient(45deg,
      rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.3));
    */
    border-radius: 10px;
    border: 2px solid black;

    display: flex;
    justify-content: space-between;
    
    & div {
      width: 50%;
      &:last-of-type {
        display: inherit;
        align-items: flex-end;
        text-align: right;
        flex-direction: column;
      }
      & p {
        width: 100%;
      }
    }
    
    &:hover{
      /* linear-gradient(45deg, black, rgba(0, 0, 0, 0.6)); */
      background: linear-gradient(45deg,
        rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.8));

      transition: background 0.2s;
    }

    &.vanish{
      opacity: 0;
      transition: all 0.6s;
    }
  }
  & p {
    margin: 3px 0;
    max-width: 80%;
  }
}


@media screen and (max-width: 600px) {
  .card {
    padding: 0.75em;
  }

}

@media screen and (max-height: 600px) and (orientation: landscape) {
  main, section, nav {
    height: 100vh;
  }

  main {
    flex-direction: initial;
  }

  nav {
    border-radius: initial;
    flex-direction: column;
    max-width: 75px;
    justify-content: space-evenly;
  }
  
  .card {
    padding: 0.75em;
  }
}


/* test stuff. TODO: organize and put this somewhere */

input, textarea, label:has(input[type="file"]) {
  background: linear-gradient(75deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.35)),
  rgb(80, 0, 160);
  font-family: inherit;
  font-size: min(18px, 1.2rem);
  text-shadow:
  1px 2px 2px rgba(0, 0, 0, 0.5),
  -1px -2px 10px rgb(30, 30, 90),
  -2px 3px 20px rgba(110, 110, 200, 0.75)
    /* -2px 3px 5px rgb(115, 115, 255), */
    /* -2px -3px 5px black */
  ;
  color: rgb(150, 150, 255);
  border: 3px solid rgba(120, 0, 210, 0.6);
  border-radius: 5px;

  &:focus {
    outline: 1px solid rgba(120, 0, 210, 0.8);
  }

  &[type="file"] {
    text-wrap: pretty;
    text-align-last: center;
    &::file-selector-button {
      width: 100%;
      padding: 5px 0;
      margin-bottom: max(2vh, 10px);
    }
    border: none;
    background: none;
    padding: 1vh 0;
  }
}

input {
  padding-left: 0.3vw;
}

textarea {
  width: clamp(250px, 90%, 800px);
  place-self: center;
  padding: 0.5vh 0.5vw;
  border-radius: 5px;
}

nav button {
  display: none;
}

@media screen and (max-height: 600px) and (orientation: landscape) {
  main {
    flex-direction: row;
    width: 100vw;
  }

  nav {
    flex-direction: column;
  }

  nav button {
    display: initial;
    padding: 3px;
  }

  nav a {
    opacity: 0;
  }

  section {
    max-width: 85vw;

    &:has(~ nav:focus-within),
    /* &:has(~ nav a:hover), */
    &:has(~ nav *:active) {
      width: 80%;

      & ~ nav {
        max-width: 150px;
        transition: width 0.6s;

        & a {
          opacity: initial;
          transition: opacity 1s;
        }
        & button {
          padding: 5%;
          transition: padding 0.3s;
        }
      }
    }
  }
}


@media screen and (max-width: 600px) {
  nav, main {
    overflow-y: hidden;
  }

  nav button { display: initial; }

  nav a { display: none; }

  section {
    &:has(~ nav:focus-within),
    /* &:has(~ nav a:hover), */
    &:has(~ nav *:active) {
      height: 45vh;

      & ~ nav {
        height: 45vh;
        flex-direction: column;
        & a {
          display: initial;
        }
      }
  }

  }
}


/* TODO:
- check for this on corresponding JS handlers
  (and turn them off conditionally)
- alternate effects
*/
@media screen and (prefers-reduced-motion: no-preference) {
  .card, .upload form {
    animation: slideUp 0.6s, fadeIn;
  }

}
